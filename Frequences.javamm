/*
 * Scrivere un metodo, detto frequences, che, dato 
 * in input un array a di numeri interi non vuoto, 
 * restituisca l'array delle frequenze degli 
 * elementi distinti di a, in ordine crescente 
 * dei valori degli elementi. Ad esempio, con 
 * input il vettore {1,6,5,8,6,6,8,5,3,1,6,8}, 
 * il metodo deve restituire l'array {2,1,2,4,3}, 
 * in quanto il valore 1 appare due volte, il 3 
 * una volta, il 5 due volte, il 6 quattro volte 
 * e l'8 tre volte. L'array in input non deve essere 
 * modificato dall'esecuzione del metodo.
 * 
 * ESEMPI
 * Input: {1,6,5,8,6,6,8,5,3,1,6,8}
 * Output: {2,1,2,4,3}
 *
 * Input: {6,6,6,6}
 * Output: {4}
 * 
 * Input: {3,5,6,2}
 * Output: {1,1,1,1}
 */
 
int [] copia(int [] a){
	int [] arr = new int[a.length];
	for(int i=0; i<a.length; i++){
		arr[i]=a[i];
	}
	return arr;
}

int [] order(int [] a){
	int index, min, temp;
	for(int i=0;i<a.length;i++){
		min=a[i];
		index=i;
		for(int j=i+1;j<a.length;j++){
			if(a[j]<min){
				min=a[j];
				index=j;
			}
		}
		temp=a[i];
		a[i]=a[index];
		a[index]=temp;
	}
	return a;
}

int[] frequences(int[] a) {
	
	int [] arr= copia(a);
	order(arr);
	int [] freq= new int [arr.length];
	int index=0;
	freq[0]=1;
	for(int i=1;i<arr.length;i++){
		if(arr[i-1]==arr[i]){
			freq[index]++;
		}else{
			index = index + 1;
			freq[index] = freq[index] + 1;  
		}
	}
		int[] out = new int[index+1];
	for (int i = 0; i < index+1; i++)
		out[i] = freq[i];
	return out;
}
